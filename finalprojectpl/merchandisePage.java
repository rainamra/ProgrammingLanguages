/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package finalprojectpl;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author rainamra
 */
public class merchandisePage extends javax.swing.JFrame implements otherMethods {
    //To connect the project with the database
    Connection con = null;
    PreparedStatement pstmt = null;
    ResultSet rs = null;
    String  databaseURL = "jdbc:mysql://localhost:3306/user_details?"
            + "zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC ";
    Statement stat = null;
    /**
     * Creates new form merchandisePage
     */
    
    public merchandisePage() {
        initComponents();
        DisplayTable();
    }
    
    @Override
    public void infoMessage(String message, String tittle)
    {
        JOptionPane.showMessageDialog(null, message, tittle, JOptionPane.INFORMATION_MESSAGE);
    }
    
    @Override
    public void clearFieldValue() {
        itemTF.setText(null);
        qtyTF.setText(null);
        priceTF.setText(null);
    }
    
    private void DisplayTable(){
       try 
       {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection(databaseURL, "root", "rain2904");
            String sql = "select * from accessories";
            pstmt = con.prepareStatement(sql);
            rs = pstmt.executeQuery();
            accTable.setModel(DbUtils.resultSetToTableModel(rs));
            
       }
        catch(Exception e)
        {
            System.out.println(e);
        }    
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelmerch = new javax.swing.JPanel();
        merchTab = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        accTable = new javax.swing.JTable();
        jPanelTabbedPane = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        itemTF = new javax.swing.JTextField();
        qtyTF = new javax.swing.JTextField();
        insertButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        categoryPicker = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        priceTF = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        backButton = new java.awt.Button();
        merchLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelmerch.setBackground(new java.awt.Color(173, 211, 225));
        jPanelmerch.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(238, 130, 69)));

        merchTab.setBackground(new java.awt.Color(255, 255, 255));
        merchTab.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        merchTab.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        accTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        accTable.setFont(new java.awt.Font("Lucida Grande", 0, 13)); // NOI18N
        accTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        accTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                accTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(accTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        merchTab.addTab("Merchandise List", jPanel3);

        jPanelTabbedPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Item         :");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("Category :");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("Qty.         :");

        itemTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemTFActionPerformed(evt);
            }
        });

        qtyTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyTFActionPerformed(evt);
            }
        });

        insertButton.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        insertButton.setText("Insert");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        resetButton.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        categoryPicker.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Necklace", "Earrings", "Rings" }));
        categoryPicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryPickerActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel4.setText("Price        :");

        priceTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceTFActionPerformed(evt);
            }
        });

        updateButton.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTabbedPaneLayout = new javax.swing.GroupLayout(jPanelTabbedPane);
        jPanelTabbedPane.setLayout(jPanelTabbedPaneLayout);
        jPanelTabbedPaneLayout.setHorizontalGroup(
            jPanelTabbedPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTabbedPaneLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanelTabbedPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTabbedPaneLayout.createSequentialGroup()
                        .addGroup(jPanelTabbedPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelTabbedPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(qtyTF)
                            .addComponent(priceTF)))
                    .addGroup(jPanelTabbedPaneLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(categoryPicker, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelTabbedPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanelTabbedPaneLayout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(itemTF))
                        .addGroup(jPanelTabbedPaneLayout.createSequentialGroup()
                            .addComponent(insertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanelTabbedPaneLayout.setVerticalGroup(
            jPanelTabbedPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTabbedPaneLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanelTabbedPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(itemTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelTabbedPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(categoryPicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanelTabbedPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(priceTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTabbedPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(qtyTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelTabbedPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertButton)
                    .addComponent(resetButton)
                    .addComponent(updateButton)
                    .addComponent(deleteButton))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        merchTab.addTab("Add New Item", jPanelTabbedPane);

        backButton.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        backButton.setLabel("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        merchLabel.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        merchLabel.setText("Merchandise");

        javax.swing.GroupLayout jPanelmerchLayout = new javax.swing.GroupLayout(jPanelmerch);
        jPanelmerch.setLayout(jPanelmerchLayout);
        jPanelmerchLayout.setHorizontalGroup(
            jPanelmerchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 573, Short.MAX_VALUE)
            .addGroup(jPanelmerchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelmerchLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanelmerchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(merchTab, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE)
                        .addGroup(jPanelmerchLayout.createSequentialGroup()
                            .addComponent(merchLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 316, Short.MAX_VALUE)
                            .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap()))
        );
        jPanelmerchLayout.setVerticalGroup(
            jPanelmerchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 356, Short.MAX_VALUE)
            .addGroup(jPanelmerchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelmerchLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanelmerchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(merchLabel))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(merchTab, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(17, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelmerch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelmerch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        dispose();
        AdminFirstPage switchForm = new AdminFirstPage();
        switchForm.setLocationRelativeTo(null);
        switchForm.setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void categoryPickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryPickerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryPickerActionPerformed

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed

        String itemName = itemTF.getText();
        String selectedCat = categoryPicker.getSelectedItem().toString();
        String qty = qtyTF.getText();
        String price = priceTF.getText();
        
       try
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection(databaseURL, "root", "rain2904");
            stat = con.createStatement();
            String selectQuery = "SELECT count(*) from accessories where "
                    + "name='"+itemName+"' and category='"+selectedCat+"'";
            System.out.println(selectQuery);
            rs = stat.executeQuery(selectQuery);
            System.out.println(rs.next());
            if(rs.next()==true)
            {
                infoMessage("Item already registered", "Please Check!");
                clearFieldValue();
            }
            else
            {
                String insertQuery = "insert into accessories values(null,"
                    + "'"+itemName+"', '"+selectedCat+"', '"+qty+"', '"+price+"')";
                stat.executeUpdate(insertQuery);
                infoMessage("Successefully insert the item", "Congratulations!");
                clearFieldValue();
            }            
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
       DisplayTable();
    }//GEN-LAST:event_insertButtonActionPerformed

    private void qtyTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyTFActionPerformed

    private void itemTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemTFActionPerformed

    private void priceTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceTFActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        clearFieldValue();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void accTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accTableMouseClicked
        // TODO add your handling code here:
        int row = accTable.getSelectedRow();
        TableModel model = accTable.getModel();
        
        //set data to text field when raw is selected
        String tbName = model.getValueAt(row, 1).toString();
        String tbCat = model.getValueAt(row, 2).toString();
        String tbQty = model.getValueAt(row, 3).toString();
        String tbPrice = model.getValueAt(row, 4).toString();
        
        //set to txtfield
        itemTF.setText(tbName);
        categoryPicker.setSelectedItem(tbCat);
        qtyTF.setText(tbQty);
        priceTF.setText(tbPrice);
    }//GEN-LAST:event_accTableMouseClicked

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        int row = accTable.getSelectedRow();
        TableModel model = accTable.getModel();
        
        String name = itemTF.getText();
        String qty = qtyTF.getText();
        String price = priceTF.getText();
        String category = categoryPicker.getSelectedItem().toString();
        String code = model.getValueAt(row, 0).toString();
        
        try
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection(databaseURL, "root", "rain2904");
            stat = con.createStatement();
            String updateQuery = "UPDATE accessories SET name=?, category=?, quantity=?, price=? WHERE ItemID= '"+code+"'";
            pstmt = con.prepareStatement(updateQuery);
            pstmt.setString(1, name);
            pstmt.setString(2, category);
            pstmt.setString(3, qty);
            pstmt.setString(4, price);
            pstmt.executeUpdate();
            infoMessage("Successefully updated the information", "Congratulations!");
            clearFieldValue();
        }
        catch(Exception e)
        {
            System.out.println(e);
        } 
        DisplayTable();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int row = accTable.getSelectedRow();
        TableModel model = accTable.getModel();
       
        String code = model.getValueAt(row, 0).toString();
        
        try
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection(databaseURL, "root", "rain2904");
            stat = con.createStatement();
            String updateQuery = "DELETE FROM accessories WHERE ItemID= '"+code+"'";
            pstmt = con.prepareStatement(updateQuery);
            pstmt.executeUpdate();
            infoMessage("Successefully delete the item", "Congratulations!");
            clearFieldValue();
        }
        catch(Exception e)
        {
            System.out.println(e);
        } 
        DisplayTable();
    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(merchandisePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(merchandisePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(merchandisePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(merchandisePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new merchandisePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable accTable;
    private java.awt.Button backButton;
    private javax.swing.JComboBox<String> categoryPicker;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton insertButton;
    private javax.swing.JTextField itemTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelTabbedPane;
    private javax.swing.JPanel jPanelmerch;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel merchLabel;
    private javax.swing.JTabbedPane merchTab;
    private javax.swing.JTextField priceTF;
    private javax.swing.JTextField qtyTF;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
